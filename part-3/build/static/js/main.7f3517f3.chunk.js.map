{"version":3,"sources":["services/persons.js","components/Input.js","components/Form.js","components/FilterInput.js","components/Notification.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","then","response","data","delete","Input","fieldName","name","handler","value","onChange","Form","submitHandler","nameValue","handleNameChange","newNumber","handleNumberChange","onSubmit","type","FilterInput","Notification","message","className","Persons","personsList","deleteHandler","map","number","key","style","backgroundColor","marginLeft","onClick","App","useState","persons","setPersons","newName","setNewName","setNewNumber","searchTerm","setSearchTerm","notificationMessage","setNotificationMessage","errorType","setNotificationType","useEffect","personsService","catch","console","log","error","updateErrorMessage","updateSuccessState","newValues","setTimeout","filter","toLocaleLowerCase","includes","toLowerCase","target","event","preventDefault","hasIndex","findIndex","p","newData","window","confirm","v","currentPerson","find","updatedPerson","filterPerson","person","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f3517f3.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = `/api/persons`;\n\nconst getAll = () => axios.get(baseUrl);\n\nconst create = (newObject) => axios.post(baseUrl, newObject);\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObject);\n\n  return req.then((response) => response.data);\n};\n\nconst deleteItem = (id) => axios.delete(`${baseUrl}/${id}`);\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteItem,\n};\n","import React from 'react';\n\nconst Input = ({ fieldName, name, handler }) => (\n  <div>\n    {fieldName}: <input value={name} onChange={handler} />\n  </div>\n);\n\nexport default Input;\n","import React from 'react';\nimport Input from './Input';\n\nconst Form = ({\n  submitHandler,\n  nameValue,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => (\n  <form onSubmit={submitHandler}>\n    <Input fieldName='name' name={nameValue} handler={handleNameChange} />\n    <Input fieldName='number' name={newNumber} handler={handleNumberChange} />\n    <div>\n      <button type='submit'>add</button>\n    </div>\n  </form>\n);\n\nexport default Form;\n","import React from 'react';\nimport Input from './Input';\n\nconst FilterInput = ({ name, handler }) => (\n  <Input fieldName='filter shown with' name={name} handler={handler} />\n);\n\nexport default FilterInput;\n","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  if (!message) return null;\n\n  return (\n    <div className={`message ${type === 'error' ? 'error' : 'success'}`}>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Persons = ({ personsList, deleteHandler }) =>\n  personsList.map(({ name, number, id }) => (\n    <div key={id}>\n      {name} {number}\n      <button\n        style={{ backgroundColor: 'red', marginLeft: '1rem' }}\n        onClick={() => deleteHandler(id)}\n      >\n        delete\n      </button>\n    </div>\n  ));\n\nexport default Persons;\n","import React, { useState, useEffect } from 'react'\n\nimport personsService from './services/persons'\n\nimport Form from './components/Form'\nimport FilterInput from './components/FilterInput'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\n\nimport './App.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorType, setNotificationType] = useState('success')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(({ data }) => setPersons(data))\n      .catch(({ response }) => {\n        const { data } = response\n        console.log(data.error)\n\n        updateErrorMessage(data.error)\n      })\n  }, [])\n\n  const updateSuccessState = (message, newValues) => {\n    setNotificationType('success')\n    setNotificationMessage(`${message} ${newName}`)\n    setTimeout(() => setNotificationMessage(null), 3000)\n\n    setPersons(newValues)\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const updateErrorMessage = (message) => {\n    setNotificationType('error')\n    setNotificationMessage(message)\n    setTimeout(() => setNotificationMessage(null), 3000)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const hasIndex = persons.findIndex((p) => p.name === newName) > -1\n    const newData = {\n      name: newName,\n      number: newNumber,\n    }\n\n    personsService\n      .create(newData)\n      .then((response) => {\n        updateSuccessState('Added', [...persons, newData])\n      })\n      .catch(({ response }) => {\n        const { data } = response\n        console.log(data.error)\n        updateErrorMessage(data.error)\n      })\n\n    if (!hasIndex) return null\n\n    if (\n      window.confirm(\n        `${newName} is already added to phonebook, replace the old number with the new one?`\n      )\n    ) {\n      const { id } = persons.filter((v) => v.name === newName)[0]\n      const currentPerson = persons.find((p) => p.id === id)\n      const updatedPerson = { ...currentPerson, ...newData }\n\n      personsService\n        .update(id, updatedPerson)\n        .then((response) => {\n          const filterPerson = persons.map((person) =>\n            person.id !== id ? person : response\n          )\n\n          updateSuccessState('Updated', filterPerson)\n        })\n        .catch(({ response }) => {\n          const { data } = response\n          console.log(data.error)\n          updateErrorMessage(data.error)\n        })\n    }\n  }\n\n  const handleNameChange = ({ target }) => setNewName(target.value)\n  const handleNumberChange = ({ target }) => setNewNumber(target.value)\n  const handleSearch = ({ target }) => setSearchTerm(target.value)\n\n  const filterList = (list) =>\n    list.filter(({ name }) => {\n      return name.toLocaleLowerCase().includes(searchTerm.toLowerCase())\n    })\n\n  const deleteHandler = (id) => {\n    const { name } = persons.filter((person) => person.id === id)[0]\n\n    if (window.confirm(`Delete ${name}?`)) {\n      personsService\n        .deleteItem(id)\n        .then((response) => {\n          setPersons(persons.filter((person) => person.id !== id))\n          updateErrorMessage(`Deleted ${name}`)\n        })\n        .catch(({ response }) => {\n          const { data } = response\n          console.log(data.error)\n          updateErrorMessage(data.error)\n        })\n    }\n  }\n\n  const personsList = !searchTerm ? persons : filterList(persons)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={errorType} />\n      <FilterInput name={searchTerm} handler={handleSearch} />\n\n      <h2>Add a new</h2>\n      <Form\n        submitHandler={handleSubmit}\n        nameValue={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons personsList={personsList} deleteHandler={deleteHandler} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}